[workspace]
members = [
  "examples/*",
  "src/lib/clist",
  "src/lib/rbi",
  "src/lib/ringbuffer",
  "src/lib/coapcore",
  "src/ariel-os",
  "src/ariel-os-bench",
  "src/ariel-os-boards",
  "src/ariel-os-boards/nrf52",
  "src/ariel-os-boards/nrf52840dk",
  "src/ariel-os-chips",
  "src/ariel-os-coap",
  "src/ariel-os-debug",
  "src/ariel-os-embassy-common",
  "src/ariel-os-esp",
  "src/ariel-os-hal",
  "src/ariel-os-identity",
  "src/ariel-os-macros",
  "src/ariel-os-nrf",
  "src/ariel-os-random",
  "src/ariel-os-rp",
  "src/ariel-os-stm32",
  "src/ariel-os-storage",
  "tests/benchmarks/bench_sched_flags",
  "tests/benchmarks/bench_sched_yield",
  "tests/coap",
  "tests/coap-blinky",
  "tests/gpio",
  "tests/gpio-interrupt-nrf",
  "tests/gpio-interrupt-stm32",
  "tests/i2c-controller",
  "tests/spi-loopback",
  "tests/spi-main",
  "tests/threading-dynamic-prios",
  "tests/threading-lock",
]

exclude = ["src/lib"]

default-members = ["examples/hello-world"]
resolver = "2"

[workspace.package]
version = "0.1.0"
authors = ["Kaspar Schleiser <kaspar@schleiser.de>"]
license = "MIT OR Apache-2.0"
edition = "2021"
repository = "https://github.com/ariel-os/ariel-os"

[workspace.dependencies]
cfg-if = { version = "1.0.0" }
cortex-m = { version = "0.7", default-features = false, features = [
  "inline-asm",
] }
cortex-m-rt = { version = "=0.7.3" }
cortex-m-semihosting = { version = "0.5" }
critical-section = { version = "1.1.2" }
# Disabling default features may reduce the code size by not providing atomics
# for types larger than the pointer width, which we do not use.
portable-atomic = { version = "1.8.0", default-features = false, features = [
  "require-cas",
] }

embassy-embedded-hal = { version = "0.2.0", default-features = false }
embassy-executor = { version = "0.6.3", default-features = false }
embassy-futures = { version = "0.1.1", default-features = false }
embassy-hal-internal = { version = "0.2.0", default-features = false }
embassy-net = { version = "0.5", default-features = false }
embassy-net-driver-channel = { version = "0.3.0", default-features = false }
embassy-nrf = { version = "0.2", default-features = false }
embassy-rp = { version = "0.2", default-features = false }
embassy-stm32 = { version = "0.1", default-features = false }
embassy-sync = { version = "0.6.1", default-features = false }
embassy-time = { version = "0.3.2", default-features = false }
embassy-usb = { version = "0.3.0", default-features = false }

embedded-hal = { version = "1.0.0", default-features = false }
embedded-hal-async = { version = "1.0.0", default-features = false }
embedded-nal-coap = "0.1.0-alpha.4"
embedded-storage = { version = "0.3.1" }
embedded-storage-async = { version = "0.4.1" }

esp-alloc = { version = "0.5.0", default-features = false }
esp-hal = { version = "0.21.1", default-features = false }
esp-hal-embassy = { version = "0.4.0", default-features = false }
esp-println = { version = "0.12.0" }
esp-wifi = { version = "0.10.1", default-features = false }
esp-storage = { version = "0.3.1" }

linkme = { version = "0.3.21", features = ["used_linker"] }

ariel-os = { path = "src/ariel-os", default-features = false }
ariel-os-bench = { path = "src/ariel-os-bench", default-features = false }
ariel-os-boards = { path = "src/ariel-os-boards", default-features = false }
ariel-os-coap = { path = "src/ariel-os-coap", default-features = false }
ariel-os-debug = { path = "src/ariel-os-debug", default-features = false }
ariel-os-embassy = { path = "src/ariel-os-embassy", default-features = false }
ariel-os-embassy-common = { path = "src/ariel-os-embassy-common" }
ariel-os-esp = { path = "src/ariel-os-esp" }
ariel-os-hal = { path = "src/ariel-os-hal", default-features = false }
ariel-os-identity = { path = "src/ariel-os-identity" }
ariel-os-nrf = { path = "src/ariel-os-nrf" }
ariel-os-random = { path = "src/ariel-os-random" }
ariel-os-rp = { path = "src/ariel-os-rp" }
ariel-os-rt = { path = "src/ariel-os-rt" }
ariel-os-runqueue = { path = "src/ariel-os-runqueue" }
ariel-os-stm32 = { path = "src/ariel-os-stm32" }
ariel-os-storage = { path = "src/ariel-os-storage" }
ariel-os-utils = { path = "src/ariel-os-utils", default-features = false }

const_panic = { version = "0.2.8", default-features = false }
defmt = { version = "0.3.7" }
document-features = "0.2.8"
fugit = { version = "0.3.7", default-features = false }
heapless = { version = "0.8.0", default-features = false }
konst = { version = "0.3.8", default-features = false }
ld-memory = { version = "0.2.9" }
once_cell = { version = "=1.19.0", default-features = false, features = [
  "critical-section",
] }
paste = { version = "1.0" }
rtt-target = { version = "0.6.0" }

rp-pac = { version = "6.0", default-features = false }
serde = { version = "1.0.197", default-features = false }
static_cell = { version = "2.0.0", features = ["nightly"] }

[profile.dev]
incremental = false
codegen-units = 1
debug = true
lto = false
opt-level = "s"     # Optimize for size even in debug builds

[profile.release]
incremental = false
codegen-units = 1
debug = true        # Required for defmt
lto = false
opt-level = "s"

[profile.release.package.esp-wifi]
opt-level = 3

[patch.crates-io]
# ariel-os embassy fork
embassy-executor = { git = "https://github.com/ariel-os/embassy", branch = "for-ariel-os-2024-11-28" }
embassy-executor-macros = { git = "https://github.com/ariel-os/embassy", branch = "for-ariel-os-2024-11-28" }
embassy-hal-internal = { git = "https://github.com/ariel-os/embassy", branch = "for-ariel-os-2024-11-28" }
embassy-nrf = { git = "https://github.com/ariel-os/embassy", branch = "for-ariel-os-2024-11-28" }
embassy-net = { git = "https://github.com/ariel-os/embassy", branch = "for-ariel-os-2024-11-28" }
embassy-rp = { git = "https://github.com/ariel-os/embassy", branch = "for-ariel-os-2024-11-28" }
embassy-net-driver = { git = "https://github.com/ariel-os/embassy", branch = "for-ariel-os-2024-11-28" }
embassy-net-driver-channel = { git = "https://github.com/ariel-os/embassy", branch = "for-ariel-os-2024-11-28" }
embassy-stm32 = { git = "https://github.com/ariel-os/embassy", branch = "for-ariel-os-2024-11-28" }
embassy-sync = { git = "https://github.com/ariel-os/embassy", branch = "for-ariel-os-2024-11-28" }
embassy-time-driver = { git = "https://github.com/ariel-os/embassy", branch = "for-ariel-os-2024-11-28" }
embassy-time-queue-driver = { git = "https://github.com/ariel-os/embassy", branch = "for-ariel-os-2024-11-28" }
embassy-usb-driver = { git = "https://github.com/ariel-os/embassy", branch = "for-ariel-os-2024-11-28" }
embassy-usb-synopsys-otg = { git = "https://github.com/ariel-os/embassy", branch = "for-ariel-os-2024-11-28" }
cyw43 = { git = "https://github.com/ariel-os/embassy", branch = "for-ariel-os-2024-11-28" }
cyw43-pio = { git = "https://github.com/ariel-os/embassy", branch = "for-ariel-os-2024-11-28" }

# ariel-os esp-hal fork
esp-alloc = { git = "https://github.com/ariel-os/esp-hal", branch = "for-ariel-os-2024-10-16-0.21.1-pr2377-nousbquirk" }
esp-hal = { git = "https://github.com/ariel-os/esp-hal", branch = "for-ariel-os-2024-10-16-0.21.1-pr2377-nousbquirk" }
esp-hal-embassy = { git = "https://github.com/ariel-os/esp-hal", branch = "for-ariel-os-2024-10-16-0.21.1-pr2377-nousbquirk" }
esp-println = { git = "https://github.com/ariel-os/esp-hal", branch = "for-ariel-os-2024-10-16-0.21.1-pr2377-nousbquirk" }
esp-wifi = { git = "https://github.com/ariel-os/esp-hal", branch = "for-ariel-os-2024-10-16-0.21.1-pr2377-nousbquirk" }
esp-storage = { git = "https://github.com/ariel-os/esp-hal", branch = "for-ariel-os-2024-10-16-0.21.1-pr2377-nousbquirk" }

# patched to use portable-atomics <https://github.com/seanmonstar/try-lock/pull/11>
try-lock = { git = "https://github.com/seanmonstar/try-lock", rev = "a1aadfac9840fe23672159c12af7272e44bc684c" }

[workspace.lints.rust]
# rustc lints are documented here: https://doc.rust-lang.org/rustc/lints/listing/index.html
private_interfaces = "deny"
private_bounds = "deny"
unsafe_op_in_unsafe_fn = "deny"
unused_must_use = "deny"
# ... until we figure out a way to generate a list of all used cfg variables
# across build configurations ...
unexpected_cfgs = "allow"

[workspace.lints.clippy]
# Clippy lints are documented here: https://rust-lang.github.io/rust-clippy/master/index.html
indexing_slicing = "deny"
missing_safety_doc = { level = "warn" }
too_long_first_doc_paragraph = "warn"
unused_result_ok = "deny"

[workspace.lints.rustdoc]
broken_intra_doc_links = "deny"
