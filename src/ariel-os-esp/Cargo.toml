[package]
name = "ariel-os-esp"
version.workspace = true
authors.workspace = true
license.workspace = true
edition.workspace = true
repository.workspace = true

[lints]
workspace = true

[dependencies]
cfg-if = { workspace = true }
defmt = { workspace = true, optional = true }
embassy-embedded-hal = { workspace = true }
embassy-executor = { workspace = true, default-features = false }
embassy-time = { workspace = true, optional = true }
embedded-hal = { workspace = true }
embedded-hal-async = { workspace = true }
esp-alloc = { workspace = true, default-features = false, optional = true }
esp-hal = { workspace = true, default-features = false }
esp-hal-embassy = { workspace = true, default-features = false }
esp-wifi = { workspace = true, default-features = false, features = [
  "esp-alloc",
  "wifi",
], optional = true }
fugit = { workspace = true, optional = true }
once_cell = { workspace = true }
paste = { workspace = true }
ariel-os-debug = { workspace = true }
ariel-os-embassy-common = { workspace = true }
ariel-os-random = { workspace = true, optional = true }
ariel-os-utils = { workspace = true }
static_cell = { workspace = true }

[target.'cfg(context = "cortex-m")'.dependencies]
embassy-executor = { workspace = true, default-features = false, features = [
  "arch-cortex-m",
] }

[target.'cfg(context = "esp32")'.dependencies]
esp-hal = { workspace = true, features = ["esp32"] }
esp-hal-embassy = { workspace = true, default-features = false, features = [
  "esp32",
] }
esp-wifi = { workspace = true, default-features = false, features = [
  "esp32",
], optional = true }

[target.'cfg(context = "esp32c3")'.dependencies]
esp-hal = { workspace = true, features = ["esp32c3"] }
esp-hal-embassy = { workspace = true, default-features = false, features = [
  "esp32c3",
] }
esp-wifi = { workspace = true, default-features = false, features = [
  "esp32c3",
], optional = true }

[target.'cfg(context = "esp32c6")'.dependencies]
esp-hal = { workspace = true, features = ["esp32c6"] }
esp-hal-embassy = { workspace = true, default-features = false, features = [
  "esp32c6",
] }
esp-wifi = { workspace = true, default-features = false, features = [
  "esp32c6",
], optional = true }

[target.'cfg(context = "esp32s3")'.dependencies]
esp-hal = { workspace = true, features = ["esp32s3"] }
esp-hal-embassy = { workspace = true, default-features = false, features = [
  "esp32s3",
] }
esp-wifi = { workspace = true, default-features = false, features = [
  "esp32s3",
], optional = true }

[features]
## Enables GPIO interrupt support.
external-interrupts = ["ariel-os-embassy-common/external-interrupts"]

## Enables seeding the random number generator from hardware.
hwrng = ["dep:ariel-os-random"]

## Enables I2C support.
i2c = [
  "dep:fugit",
  "ariel-os-embassy-common/i2c",
  "embassy-executor/integrated-timers",
]

## Enables SPI support.
spi = ["dep:fugit", "ariel-os-embassy-common/spi"]

## Enables defmt support.
defmt = ["dep:defmt", "esp-hal/defmt", "esp-wifi?/defmt", "fugit?/defmt"]

# Enables USB support.
usb = []

## Enables Wi-Fi support.
wifi = []

## Enables built-in Wi-Fi hardware.
wifi-esp = ["dep:embassy-time", "dep:esp-alloc", "dep:esp-wifi", "wifi"]

#! ## Executor type selection for the (autostarted) main executor
#! Exactly one of the features below must be enabled at once.
## Enables the interrupt executor.
executor-interrupt = ["embassy-executor/executor-interrupt"]
## Enables the single thread-mode executor.
executor-single-thread = ["esp-hal-embassy/executors"]
