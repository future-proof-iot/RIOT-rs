[package]
name = "ariel-os-stm32"
version.workspace = true
license.workspace = true
edition.workspace = true
repository.workspace = true

[lints]
workspace = true

[dependencies]
cfg-if = { workspace = true }
defmt = { workspace = true, optional = true }
embassy-embedded-hal = { workspace = true }
embassy-executor = { workspace = true, default-features = false, features = [
  "arch-cortex-m",
] }
embassy-stm32 = { workspace = true, default-features = false }
embedded-hal-async = { workspace = true }
paste = { workspace = true }
portable-atomic = { workspace = true }
ariel-os-embassy-common = { workspace = true }
ariel-os-random = { workspace = true, optional = true }
static_cell = { workspace = true }

[target.'cfg(context = "stm32")'.dependencies]
embassy-stm32 = { workspace = true, features = [
  "rt",
  "time-driver-any",
  "unstable-pac",
] }

[features]
## Enables GPIO interrupt support.
external-interrupts = [
  "embassy-stm32/exti",
  "ariel-os-embassy-common/external-interrupts",
]

## Enables seeding the random number generator from hardware.
hwrng = ["dep:ariel-os-random"]
# These are chosen automatically by ariel-os-boards and select the correct stm32
# rng peripheral support.
stm32-hash-rng = []
stm32-rng = []

## Enables I2C support.
# Time-related features are required for timeout support.
i2c = [
  "ariel-os-embassy-common/i2c",
  "embassy-stm32/time",
  "embassy-executor/integrated-timers",
]

## Enables SPI support.
spi = ["ariel-os-embassy-common/spi", "embassy-executor/integrated-timers"]

## Enables USB support.
usb = []
# These are chosen automatically by ariel-os-boards and select the correct stm32
# usb peripheral support.
stm32-usb = []
stm32-usb-synopsis = []

## Enables defmt support.
defmt = ["dep:defmt", "embassy-stm32/defmt"]

## Enables the interrupt executor.
executor-interrupt = ["embassy-executor/executor-interrupt"]
